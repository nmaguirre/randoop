Field based randoop v0.4 (release fb-v0.4@github)
=================================================

The field based version of randoop allows for all the original randoop flags plus the ones
listed below:


FIELD BASED GENERATION OPTIONS:

--field-based-gen=<DISABLED|FAST|MIN> (default: DISABLED)

Field based generation approach. Field based generation can be done 
considering only the last sentence of each test (value: FAST), or taking into
account all the sentences of each test, and minimizing tests accordingly (value: MIN).
The latter can be much slower but it can be more precise (and obtain better scores in
test evaluation criteria) 
Field based generation can also be disabled (value: DISABLED).

--field-based-gen-ignore-primitive=<true|false> (default: true)

If false, primitive values are not saved in field extensions. This implies that only 
methods modifying the structure of objects can contribute to field extensions. If true,
primitive values are also added to field extensions.

--field-based-gen-drop-non-contributing-tests=<true|false> (default: false)

If true, successful tests (i.e. not failing, not negative) that aren't useful for enlarging 
field extensions are not saved as regressions tests. This significantly reduces the number 
of tests generated by the field based approach, but in some cases can have negative consequences,
like reduced coverage levels (e.g. observer methods never contribute to field extensions and 
hence are never used in regression tests).

--field-based-gen-classlist=<filename> (e.g. /Users/pponzio/fbg-classes.txt) (default: null)

A file containing the list of classes whose objects will be considered for extending the 
field extensions. The file must contain one fully qualified class name per line. For example:

java.util.LinkedList
java.util.LinkedList.Node
 
If this flag is not provided, field based randoop will use a default set of classes for 
enlarging the field extensions (almost all of java).

--field-based-gen-log=<filename> (ej. /Users/pponzio/randoop-fbg-log.txt) (default: null)

Log (a lot of) information about the field based generation execution in the given file. 
Very useful for debugging.


WEIGHTED SELECTION OPTIONS:

--field-based-gen-weighted-selection=<true|false> (default: false)

If true, employ a random weighted selection approach for picking a method that will be 
used as the basis to build a new test (instead of using a uniform random selection approach). 
Using this approach, methods that enlarge the extensions in tests will get their weights 
increased, and those that do not may get their weights decreased.

--weight-increment=<int> (default: 10)

Increment the weight of methods that enlarge the extensions in test by this ammount each time.

--weight-decrement=<int> (default: 0)

Decrement the weight of methods that enlarge the extensions in test by this ammount each time.

--starting-weight=<int> (default: 10) 

Starting weight of all the methods under test.

--smaller-weight=<int> (default: 10)

The smaller weight that a method is allowed to have in random weighted selection.

--larger-weight=<int> (default: 100)

The larger weight that a method is allowed to have in random weighted selection.


MISCELANEOUS: 

--max-extensions-size-to-log=<int> (default: 1000) 

Only log extensions that have up to this number of elements 

--field-based-gen-disable-contracts=<true|false> (default: false)

Disable randoop contracts. These are used as oracles for tests (and hence are important) 
but they can be far the slowest part of randoop in some cases. Oracles become (a lot) 
slower as tests grow larger so they can become a bottleneck for the field based approach, 
hence this option. Use with caution.

* Suggested randoop setting to allow for larger tests to be generated (favouring the field
based approach): 

--maxsize=10000 (maybe >= 10000?)
